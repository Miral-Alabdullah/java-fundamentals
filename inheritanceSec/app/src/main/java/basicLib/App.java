/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basicLib;

import java.util.*;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println("\nStarting The Program\n");
        System.out.println("Hello"); // first test
        System.out.println("=====================================");
        roll(3);
        containsDuplicates(10);
        int[] arrayOfNumbers = new int[10];
        averageOfIntegers(arrayOfNumbers);
        arrayOfArrays();

        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        analyzingWeatherData(weeklyMonthTemperatures);



        List<String> votes = new ArrayList<>();

        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        tally(votes);

    }

    public static void roll(int n){
        System.out.println("\nRoll Method\n");
        Random rand = new Random();
        ArrayList<Integer> arrayOfSides = new ArrayList<>();
        int sidesOfDice;
        for (int i=0; i<n; i++){
            sidesOfDice = rand.nextInt(6);
            arrayOfSides.add(sidesOfDice);
        }
        System.out.print(arrayOfSides + "\n");
        System.out.println("=====================================");
    }

    public static void containsDuplicates (int n) {
        System.out.println("\ncontainsDuplicates Method\n");
        Random rand = new Random();
        ArrayList<Integer> arrayOfNumbers = new ArrayList<>();
        int elements;
        for (int i=0; i<n; i++){
            elements = rand.nextInt(n);
            if(arrayOfNumbers.contains(elements)){
                System.out.print("Is " + elements + " duplicated? " + " true" + "\n");
            } else {
                System.out.print("Is " + elements + " duplicated? " + " false" + "\n");
            }
            arrayOfNumbers.add(elements);
        }
        System.out.print("\n" + arrayOfNumbers + "\n");
        System.out.println("=====================================");
    }

    public static void averageOfIntegers (int[] arrayOfIntegers) {
        System.out.print("\n averageOfIntegers Method \n");

        double sum=0;
        double average;
        Random rand = new Random();
        int numbers;
        for (int i=0; i<arrayOfIntegers.length; i++){
            numbers = rand.nextInt(10);
            arrayOfIntegers[i]=numbers;
            sum+=numbers;
        }
        average=sum/10;
        String outputMessage = " \n The Average of " + sum + "/10" + " = " + average;
        System.out.println(outputMessage);
        System.out.println("=====================================");
    }

    public static void arrayOfArrays() {
        System.out.print("\n arrayOfArrays \n");
        double sum;
        double average;
        int index;
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        double[] arrayOfAverages = new double [weeklyMonthTemperatures.length];
        System.out.println("\n The Averages are : " + "\n");
        for (int i=0; i<weeklyMonthTemperatures.length; i++){
            index=0;
            sum=0;
            for (int j=0; j<weeklyMonthTemperatures[i].length; j++){
                sum+=weeklyMonthTemperatures[i][j];
                index++;
            }
            average=sum/index;
            arrayOfAverages[i]=average;
            System.out.println("* " + arrayOfAverages[i] + "\t");
        }
        Arrays.sort(arrayOfAverages);
        System.out.println("\n The Lowest Average is: " + arrayOfAverages[0] + "\n");
        System.out.println("=====================================");
    }

    public static String analyzingWeatherData(int[][] arrayOfTemps) {

        System.out.println("\n analyzingWeatherData Method\n");


        Set<Integer> temperatures = new HashSet<>();

        for (int[] arrayOfTemp : arrayOfTemps) {
            for (int i : arrayOfTemp) {
                temperatures.add(i);
            }
        }
        temperatures = new TreeSet<>(temperatures);

        Integer[] temperaturesAsAnArray = temperatures.toArray(new Integer[0]);

        int high = temperaturesAsAnArray[temperaturesAsAnArray.length-1];
        int low = temperaturesAsAnArray[0];

        System.out.println("\n High: " + high);
        System.out.println("\n Low: " + low);

        System.out.println("\n");

        String tempsNotShown = "";
        for (int i = low; i < high; i++) {
            if(!temperatures.contains(i)){
                tempsNotShown = "Never saw temperature: " + i;
                System.out.println(tempsNotShown);
            }
        }

        System.out.println("\n");

        return tempsNotShown;
    }

    public static String tally(List<String> votes){
        String winner = "";
        int tracer = 0;
        String outPutMessage = "";
        Set<String> repeatedValues = new HashSet<>();
        for (String vote : votes){
            repeatedValues.addAll(votes);
            int highestVotesNumber = Collections.frequency(votes, vote);
            if(highestVotesNumber>tracer){
                tracer = highestVotesNumber;
                winner = vote;
            }
        }
        outPutMessage = winner + " received the most votes!";
        System.out.println(outPutMessage);
        return outPutMessage;
    }
}
